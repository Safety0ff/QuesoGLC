AC_INIT(include/internal.h)
AC_PREREQ(2.12)
AC_CONFIG_HEADER(include/qglc_config.h:include/qglc_config.hin)

AC_PROG_CC

VERSION="0.2"
dnl Enable shared library building

AH_TEMPLATE([QUESOGLC_STATIC_LIBRARY], [Define if we are building a static library])
AC_ARG_ENABLE(
	shared,
	[  --enable-shared[=x]     build shared library [default=no]],
	test "X$enableval"!="Xno" && glc_build_shared=yes,
	AC_DEFINE(QUESOGLC_STATIC_LIBRARY)
	LIBRARY="\$(LIB_NAME).a"
	CFLAGS4SHARED=
	LIBS4SHARED=
)

dnl Enable pthread support

AC_ARG_ENABLE(
	pthreads,
	[  --enable-pthreads[=x]   enable POSIX threads support [default=yes]],
	test "X$enableval" != "Xno" && glc_enable_pthreads=yes,
	glc_enable_pthreads=yes
)

dnl Test for location of X headers and libraries

AC_PATH_X
if test -n "$x_includes"; then
	CPPFLAGS="-I$x_includes $CPPFLAGS"
fi
if test -n "$x_libraries"; then
	LDFLAGS="-L$x_libraries $LDFLAGS"
fi
LIBS="-lX11 -lXext -lXmu -lXi"

dnl Locate pthread library

AH_TEMPLATE([QUESOGLC_USE_THREAD], [Define if pthreads are to be used])
if test -n "$glc_enable_pthreads"; then
	AC_CHECK_HEADER(pthread.h, , fail=y)
	AC_CHECK_LIB(pthread, pthread_create, LIBS4SHARED="-lpthread $LIBS4SHARED", fail=y)
	if test -n "$fail"; then
		AC_MSG_ERROR([Unable to locate required pthread headers/library])
	else
		AC_DEFINE(QUESOGLC_USE_THREAD)
	fi
fi

dnl Locate FreeType headers and library

CPPFLAGS="`freetype-config --cflags` $CPPFLAGS"
AC_CHECK_HEADER(ft2build.h, , fail=y)
AC_CHECK_LIB(freetype, FT_Init_FreeType, LIBS4SHARED="`freetype-config --libs` $LIBS4SHARED", fail=y)
if test -n "$fail"; then
	AC_MSG_ERROR([Unable to locate required FreeType 2.0 headers/libraries])
fi
 
dnl Locate Fontconfig headers and library

AC_CHECK_HEADER(fontconfig/fontconfig.h, , fail=y)
AC_CHECK_LIB(fontconfig, FcInit, LIBS4SHARED="-lfontconfig $LIBS4SHARED", fail=y)
if test -n "$fail"; then
	AC_MSG_ERROR([Unable to locate required Fontconfig headers/libraries])
fi
 
dnl Locate GL headers and libraries

AC_CHECK_HEADER(GL/gl.h, , fail=y)
AC_CHECK_LIB(GL, glBlendFunc, LIBS="-lGL $LIBS", fail=y)
if test -n "$fail"; then
	AC_MSG_ERROR([Unable to locate required OpenGL headers/libraries])
fi

dnl Locate GLU headers and libraries

AC_CHECK_HEADER(GL/glu.h, , fail_glu=y)
AC_CHECK_LIB(GLU, gluSphere, LIBS="-lGLU $LIBS", fail=y)
if test -n "$fail"; then
	AC_MSG_ERROR([Unable to locate required GLU headers/libraries])
else
	LIBS4SHARED="-lGLU $LIBS4SHARED"
fi

dnl Locate GLUT headers and libraries

AC_CHECK_HEADER(GL/glut.h, , fail_glut=y)
AC_CHECK_LIB(glut, glutInit, LIBS="-lglut $LIBS", fail_glut=y)
if test -n "$fail_glut"; then
	EXAMPLES=""
else
	EXAMPLES="\$(TEST_OBJECTS)"
fi

if test -n "$glc_build_shared"; then
	LIBRARY="\$(LIB_NAME).so.\$(VERSION)"
	CFLAGS4SHARED="-fPIC"
else
	LIBS="$LIBS4SHARED $LIBS"
fi

AC_SUBST(LIBS)
AC_SUBST(CPPFLAGS)
AC_SUBST(CC)
AC_SUBST(libdir)
AC_SUBST(prefix)
AC_SUBST(LIBRARY)
AC_SUBST(LIBS4SHARED)
AC_SUBST(CFLAGS4SHARED)
AC_SUBST(VERSION)
AC_SUBST(EXAMPLES)

AC_OUTPUT(makefile:makefile.unx,
  [test -z "$CONFIG_HEADERS" || echo timestamp > stamp-h])
echo '#Execute "make depend"' > makefile.dep
make depend
