#!/usr/bin/python
import urllib, string

print "Open URL..."
unicodata = urllib.urlopen("http://www.unicode.org/Public/UNIDATA/UnicodeData.txt")
print "Read data from URL..."
lignes = unicodata.readlines()
print "Close URL..."
unicodata.close()

print "Sort data..."
unicodeNameFromCode = {}
unicodeCodeFromName = {}
for s in lignes:
    liste = string.split(s, ';')
    code = eval('0x'+liste[0])
    name = liste[1]
    if name == '<control>':
        continue
    unicodeNameFromCode[code] = name
    unicodeCodeFromName[name] = code

liste = []
codes = unicodeNameFromCode.keys()
codes.sort()
vmax = max(codes[:256])
for c in codes[:256]:
    liste.append(unicodeNameFromCode[c])
liste.sort()
i = 0
codes = [-1]*(vmax+1)

sourceCode1 = ["/* This is automagically generated by buildDB.py */\n",
              '#include "internal.h"\n\n',
              'typedef struct {\n',
              '  GLint code;\n',
              '  GLCchar* name;\n',
              '} __glcDataCodeFromName;\n\n']
sourceCode2 = ['GLCchar* __glcNameFromCode(GLint code)\n',
'{\n',
'  GLint position = -1;\n\n',
'  if ((code < 0) || (code > __glcMaxCode))\n',
'    return GLC_NONE;\n\n',
'  position = __glcNameFromCodeArray[code];\n',
'  if (position == -1)\n',
'    return GLC_NONE;\n\n',
'  return __glcCodeFromNameArray[position].name;\n',
'}\n\n',
'GLint __glcCodeFromName(GLCchar* name)\n',
'{\n',
'  int start = 0;\n',
'  int end = sizeof(__glcCodeFromNameArray)/sizeof(__glcDataCodeFromName);\n',
'  int middle = (end + start) / 2;\n',
'  int res = 0;\n\n',
'  while (end - start > 1) {\n',
'    res = strcmp(name, __glcCodeFromNameArray[middle].name);\n',
'    if (res > 0)\n',
'      start = middle;\n',
'    else if (res < 0)\n',
'      end = middle;\n',
'    else\n',
'      return __glcCodeFromNameArray[middle].code;\n',
'    middle = (end + start) / 2;\n',
'  }\n',
'  if (strcmp(name, __glcCodeFromNameArray[start].name) == 0)\n',
'    return __glcCodeFromNameArray[start].code;\n',
'  if (strcmp(name, __glcCodeFromNameArray[end].name) == 0)\n',
'    return __glcCodeFromNameArray[end].code;\n',
'  return -1;\n',
'}\n']

print "Write ../src/database.c"
db = open('../src/database.c','w')
db.writelines(sourceCode1)
db.write("static __glcDataCodeFromName __glcCodeFromNameArray[] = {\n")
for name in liste:
    db.write('{ %d, "%s"},\n' % (unicodeCodeFromName[name], name))
    codes[unicodeCodeFromName[name]] = i
    i += 1
db.write("};\n")
db.write("static GLint __glcNameFromCodeArray[] = {\n")
for c in codes:
    db.write("%d,\n" % c)
db.write("};\n")
db.write("static GLint __glcMaxCode = %d;\n\n" % vmax)
db.writelines(sourceCode2)
db.close()

print "Success !!!"
