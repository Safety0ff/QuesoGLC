#!/usr/bin/python
import urllib, string

print "Open URL..."
unicodata = urllib.urlopen("http://www.unicode.org/Public/UNIDATA/UnicodeData.txt")
print "Read data from URL..."
lignes = unicodata.readlines()
print "Close URL..."
unicodata.close()

print "Sort data..."
unicodeNameFromCode = {}
unicodeCodeFromName = {}
for s in lignes:
    liste = string.split(s, ';')
    code = eval('0x'+liste[0])
    name = liste[1]
    if name == '<control>':
        continue
    unicodeNameFromCode[code] = name
    unicodeCodeFromName[name] = code

liste = []
codes = unicodeNameFromCode.keys()
codes.sort()
vmax = max(codes[:256])
for c in codes[:256]:
    liste.append(unicodeNameFromCode[c])
liste.sort()
i = 0
codes = [-1]*(vmax+1)

sourceCode = ["/* This is automagically generated by buildDB.py */\n",
              '#include "internal.h"\n\n']

print "Write ../src/database.c"
db = open('../src/database.c','w')
db.writelines(sourceCode)
db.write("const __glcDataCodeFromName __glcCodeFromNameArray[] = {\n")
for name in liste:
    db.write('{ %d, "%s"},\n' % (unicodeCodeFromName[name], name))
    codes[unicodeCodeFromName[name]] = i
    i += 1
db.write("};\n")
db.write("const GLint __glcNameFromCodeArray[] = {\n")
for c in codes:
    db.write("%d,\n" % c)
db.write("};\n")
db.write("const GLint __glcMaxCode = %d;\n" % vmax)
db.write("const GLint __glcCodeFromNameSize = %d;\n" % len(liste))
db.close()

print "Success !!!"
